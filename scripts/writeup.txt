Ian Hill
Liani Lye
10.08.15

---
What was the goal of your project?

We attempted to implement particle filtering, an alternative method to determining the robot's position.  We succeeded, though our robot does not localize itself as gracefully as it could (aka we could have tweaked certain constants for more refined behavior).

---
How did you solve the problem? (Note: this doesn't have to be super-detailed, you should try to explain what you did at a high-level so that others in the class could reasonably understand what you did).

In particle filtering, a particle cloud is deployed to the robot's approximate location.  Each particle has a certain probability of actually being in the robot's position.

---
Describe a design decision you had to make when working on your project and what you ultimately did (and why)? These design decisions could be particular choices for how you implemented some part of an algorithm or perhaps a decision regarding which of two external packages to use in your project.

---
What if any challenges did you face along the way?

We determined that this was due to threading.  Because normalize_particles() is called in various locations of pf.py, the particle weights were constantly being written and overwritten.  We overcome this by doing a deep-copy of each list of particle weights and modifying /that/.

---
What would you do to improve your project if you had more time?

Given more time, we would test different sigma values.

---
Did you learn any interesting lessons for future robotic programming projects? These could relate to working on robotics projects in teams, working on more open-ended (and longer term) problems, or any other relevant topic.

Understanding method dependencies.  Also, threading (see previous prompt).